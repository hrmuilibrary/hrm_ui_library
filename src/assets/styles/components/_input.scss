@use "../helpers/mixin";

.input {
  $this: &;

  //----------- component specific tokens -------------//

  --ds-input-size-lg: var(--ds-size-48);
  --ds-input-size-md: var(--ds-size-40);
  --ds-input-size-sm: var(--ds-size-32);

  --ds-input-padding: var(--ds-space-12);
  --ds-input-padding-lg: var(--ds-space-40);

  --ds-input-font: var(--ds-font-weight-default) var(--ds-paragraph-std)/var(--ds-line-height-default) var(--ds-font-family);

  --ds-input-bg-default: var(--ds-color-bg-white);
  --ds-input-bg-hover: var(--ds-color-bg-container);
  --ds-input-bg-pressed: var(--ds-color-bg-white);
  --ds-input-bg-focused: var(--ds-color-bg-white);
  --ds-input-bg-activated: var(--ds-color-bg-white);
  --ds-input-bg-validated: var(--ds-color-bg-white);
  --ds-input-bg-invalid: var(--ds-color-bg-white);
  --ds-input-bg-disabled: var(--ds-color-bg-white);

  --ds-input-body-placeholder: var(--ds-color-text-tertiary);

  --ds-input-body-text-default: var(--ds-color-text-primary);
  --ds-input-body-text-hover: var(--ds-color-text-secondary);
  --ds-input-body-text-focused: var(--ds-color-text-primary);
  --ds-input-body-text-activated: var(--ds-color-text-primary);
  --ds-input-body-text-validated: var(--ds-color-text-primary);
  --ds-input-body-text-invalid: var(--ds-color-text-primary);
  --ds-input-body-text-disabled: var(--ds-color-text-disabled);

  --ds-input-body-icon-hover: var(--grey-800);
  --ds-input-body-icon-focused: var(--ds-color-text-primary);
  --ds-input-body-icon-activated: var(--ds-color-text-primary);
  --ds-input-body-icon-validated: var(--ds-color-text-primary);
  --ds-input-body-icon-invalid: var(--ds-color-text-primary);
  --ds-input-body-icon-disabled: var(--ds-color-text-disabled);

  --ds-input-border-color-default: var(--ds-color-border-tertiary);
  --ds-input-border-color-hover: var(--ds-color-border-disabled);
  --ds-input-border-color-focused: var(--brand-700);
  --ds-input-border-color-activated: var(--ds-color-border-tertiary);
  --ds-input-border-color-validated: var(--ds-color-border-tertiary);
  --ds-input-border-color-invalid: var(--ds-color-border-danger);
  --ds-input-border-color-disabled: var(--ds-color-border-disabled);
  --ds-input-border: var(--ds-border-thin) solid var(--ds-input-border-color-default);

  --ds-input-border-radius-lg: var(--ds-border-radius-lg);
  --ds-input-border-radius-md: var(--ds-border-radius-lg);
  --ds-input-border-radius-sm: var(--ds-border-radius-md);

  --ds-input-icon-position: var(--ds-space-10);

  --ds-input-transition: background-color .3s linear, color .3s linear, border-color .3s linear;

  //----------//

  // MOBILE

  @media screen and (max-width: 768px) {
    input {
      font-size: var(--ds-paragraph-md) !important;
    }
  }

  input {
    border: 0;
    width: 100%;
    display: block;
    outline: none;
    font: var(--ds-input-font);
    padding: 0 var(--ds-input-padding);
    color: var(--ds-input-body-text-default);
    background-color: var(--ds-input-bg-default);
    border: var(--ds-input-border);
    transition: var(--ds-input-transition);
    text-overflow: ellipsis;

    &:-ms-input-placeholder {
      color: var(--ds-input-body-placeholder);
    }

    &::placeholder {
      color: var(--ds-input-body-placeholder);
    }

    & + #{$this}__icon {
      color: var(--ds-color-text-disabled);
    }

    & + #{$this}__icon + #{$this}__icon {
      color: var(--grey-500);
    }

    &:hover {
      color: var(--ds-input-body-text-hover);
      background-color: var(--ds-input-bg-hover);
      border-color: var(--ds-input-border-color-hover);

      & + #{$this}__icon,
      & + #{$this}__icon + #{$this}__icon {
        color: var(--ds-input-body-icon-hover);
      }
    }

    &:focus {
      color: var(--ds-color-text-primary);
      border-radius: var(--ds-size-10);
      border: 1px solid var(--grey-900);
      background-color: var(--grey-0);
      box-shadow: 0 0 0 2px var(--grey-0), 0 0 0 4px var(--grey-200);

      & + #{$this}__icon {
        color: var(--grey-600);
      }

      & + #{$this}__icon + #{$this}__icon {
        color: var(--ds-input-body-icon-focused);
      }
    }

    &:active {
      color: var(--ds-input-body-text-activated);
      background-color: var(--ds-input-bg-activated);
      border-color: var(--ds-input-border-color-activated);

      & + #{$this}__icon,
      & + #{$this}__icon + #{$this}__icon {
        color: var(--ds-input-body-icon-activated);
      }
    }

    &[disabled] {
      cursor: default;
      background-color: var(--grey-50);
      border-color: var(--grey-50);
      color: var(--grey-300);

      &:-ms-input-placeholder {
        color: var(--grey-300);
      }

      &::placeholder {
        color: var(--grey-300);
      }

      & + #{$this}__icon,
      & + #{$this}__icon + #{$this}__icon {
        color: var(--grey-300);
        pointer-events: none;
        cursor: default;
        
        svg path {
          fill: var(--grey-400);
        }
      }
    }

    &:read-only {
      cursor: default;
    }
  }

  &--valid {
    input {
      color: var(--ds-input-body-text-validated);
      background-color: var(--ds-input-bg-validated);
      border-color: var(--ds-input-border-color-validated);

      & + #{$this}__icon {
        color: var(--ds-input-body-icon-validated);
      }
    }
  }

  &--invalid {
    input {
      color: var(--ds-input-body-text-invalid);
      background-color: var(--ds-input-bg-invalid);
      border-color: var(--red-400);

      & + #{$this}__icon {
        color: var(--ds-input-body-icon-invalid);
      }
    }
  }

  &__inner {
    width: 100%;
    position: relative;
  }

  &__icon {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);

    &--left {
      left: var(--ds-input-icon-position);
    }

    &--right {
      cursor: pointer;
      right: var(--ds-input-icon-position);
    }
  }

  &--icon-left {
    input {
      padding-left: var(--ds-input-padding-lg);
    }
  }

  &--icon-right {
    input {
      padding-right: var(--ds-input-padding-lg);
    }
  }

  &--medium {
    input {
      height: var(--ds-input-size-md);
      border-radius: var(--ds-input-border-radius-md);
    }
  }

  &--large {
    input {
      height: var(--ds-input-size-lg);
      border-radius: var(--ds-input-border-radius-lg);
    }
  }

  &--small {
    input {
      height: var(--ds-input-size-sm);
      border-radius: var(--ds-input-border-radius-sm);
    }
  }

  &__message {
    @include mixin.flexbox;
    @include mixin.align-items(center);
    @include mixin.justify-content(space-between);
  }

  &__counter {
    flex: 1;
    text-align: right;
  }
}


